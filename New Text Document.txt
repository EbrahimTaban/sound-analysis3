<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sound Pressure Level Analysis</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/octave.js"></script>
</head>
<body>
    <h1>Sound Pressure Level Analysis</h1>
    <div id="plot" style="width: 100%; height: 500px;"></div>
    <script>
        // Translate your MATLAB code here
        const Lw = 100;
        const Q = 2;
        const R1 = 150;
        const Sw = 25 * 15;
        const R2 = 200;
        const r = 2;

        const frequencies = [100, 125, 160, 200, 250, 315, 400, 500, 630,
            800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300];
        const TL_values = [15, 18, 20, 22, 25, 28, 30, 32, 34,
            36, 38, 40, 42, 44, 46, 48, 50, 52, 54];

        let Lp1 = [];
        let Lpn = [];
        let Lpd = [];
        let NR_near = [];
        let NR_far = [];

        for (let i = 0; i < frequencies.length; i++) {
            const TL = TL_values[i];
            const Lp1_value = Lw + 10 * Math.log10(Q / (4 * Math.PI * r ** 2) + 4 / R1) + 0.1;
            const Lpn_value = Lp1_value - TL + 10 * Math.log10(1 / 4 + Sw / R2);
            const Lpd_value = Lp1_value - TL + 10 * Math.log10(Sw / R2);

            Lp1.push(Lp1_value);
            Lpn.push(Lpn_value);
            Lpd.push(Lpd_value);
            NR_near.push(Lp1_value - Lpn_value);
            NR_far.push(Lp1_value - Lpd_value);
        }

        const trace1 = {
            x: frequencies,
            y: Lp1,
            mode: 'lines+markers',
            name: 'Lp1 (Near Source)'
        };
        const trace2 = {
            x: frequencies,
            y: Lpn,
            mode: 'lines+markers',
            name: 'Lpn (Near Wall)'
        };
        const trace3 = {
            x: frequencies,
            y: Lpd,
            mode: 'lines+markers',
            name: 'Lpd (Far Wall)'
        };
        const trace4 = {
            x: frequencies,
            y: NR_near,
            mode: 'lines',
            name: 'NR (Near Wall)'
        };
        const trace5 = {
            x: frequencies,
            y: NR_far,
            mode: 'lines',
            name: 'NR (Far Wall)'
        };

        const layout = {
            title: 'Sound Pressure Levels and Noise Reduction',
            xaxis: { title: 'Frequency (Hz)', type: 'log' },
            yaxis: { title: 'Sound Pressure Level (dB)' }
        };

        Plotly.newPlot('plot', [trace1, trace2, trace3, trace4, trace5], layout);
    </script>
</body>
</html>
